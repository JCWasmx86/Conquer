plugins {
	 id "java"
}
repositories {
	mavenCentral()
}
dependencies {
	testImplementation "org.junit.jupiter:junit-jupiter-api:5.3.1"
	testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.3.1"
	testImplementation "org.hamcrest:hamcrest-library:1.3"
}
compileJava {
	options.fork = true
	options.incremental = true
}

tasks.withType(JavaCompile).each {
	it.options.compilerArgs.add("--enable-preview")
	it.options.compilerArgs.add("--target")
	it.options.compilerArgs.add("15")
}
test {
	testLogging {
		events "passed", "skipped", "failed", "standardOut", "standardError"
	}
	jvmArgs = List.of("--enable-preview")
	useJUnitPlatform()
}
jar {
	exclude "services/**"
	exclude "**/*.properties"
	exclude "data"
	exclude "images"
}
task conquerResources(type: Jar) {
    from sourceSets.main.output
    exclude "**/*.class"
    baseName = 'Conquer_resources'
}
conquerResources.dependsOn(":auxiliary:buildDataZip")
conquerResources.dependsOn(":DefaultPlugins:jar")
conquerResources.mustRunAfter(":DefaultPlugins:jar")
conquerResources.mustRunAfter(":auxiliary:buildDataZip")
assemble.dependsOn(conquerResources);
assemble.dependsOn(test)

clean {
	delete "src/main/resources/data"
}
