plugins {
	id "java"
	id "com.github.johnrengelman.shadow" version "7.0.0"
	id "application"
}
mainClassName = "conquer.ri.datatool.tool.Main"
task buildSlaine(type: JavaExec) {
	classpath = files("build/libs/ScenarioGenerator.jar")
	main = "conquer.ri.datatool.tool.Slaine"
}
task buildBelenos(type: JavaExec) {
	classpath = files("build/libs/ScenarioGenerator.jar")
	main = "conquer.ri.datatool.tool.Belenos"
}
task buildEtiona(type: JavaExec) {
	classpath = files("build/libs/ScenarioGenerator.jar")
	main = "conquer.ri.datatool.tool.Etiona"
}
task buildFreedo(type: JavaExec) {
	classpath = files("build/libs/ScenarioGenerator.jar")
	main = "conquer.ri.datatool.tool.Freedo"
}
shadowJar {
	archiveBaseName.set("shaded-tool.jar")
	exclude "*.png"
	exclude "images"
	relocate "com.google.gson", "conquer.ri.datatool.tool.gson"
}
dependencies {
	implementation "com.google.code.gson:gson:2.8.9"
}
def contentSpec = copySpec {
	from("src/main/resources") {
		include "*.png"
	}
}
task copyFiles(type: Copy) {
	into "."
	with contentSpec
}

task deleteFiles(type: Delete) {
	delete "Belenos.png"
	delete "Belenos.data"
	delete "Etiona.png"
	delete "Etiona.data"
	delete "Slaine.png"
	delete "Slaine.data"
	delete "Freedo.png"
	delete "Freedo.data"
}
buildSlaine.dependsOn(jar, copyFiles)
buildBelenos.dependsOn(jar, copyFiles)
buildEtiona.dependsOn(jar, copyFiles)
buildFreedo.dependsOn(jar, copyFiles)
processResources.dependsOn(copyFiles)
compileJava.dependsOn(copyFiles)
clean.dependsOn(deleteFiles)
build.dependsOn(buildSlaine, buildBelenos, buildEtiona, buildFreedo, copyFiles)
assemble.dependsOn(shadowJar)
