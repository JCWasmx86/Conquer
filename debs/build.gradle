import java.nio.file.Files
import java.nio.file.Paths
import org.apache.tools.ant.taskdefs.condition.Os

task buildDebs() {
	doLast {
		println("Built .deb files")
	}
}
buildDebs.mustRunAfter(":Launcher:callMakefile")
buildDebs.mustRunAfter(":auxiliary:buildDataZip")
buildDebs.mustRunAfter(":Conquer:jar")
buildDebs.mustRunAfter(":ConquerFrontend:jar")

task buildConquerDeb() {
	doLast {
		exec {
			mkdir "conquer/DEBIAN"
			mkdir "conquer/usr/bin"
			mkdir "conquer/usr/share/conquer"
			commandLine "chmod", "0755", "conquer/DEBIAN"
		}
		copy {
			from file("../Launcher")
			include "launcher"
			include "conquer_launcher"
			into file("conquer/usr/bin")
		}
		copy {
			from "../auxiliary"
			include "LICENSE.txt"
			include "Conquer.license"
			into "conquer/usr/share/conquer"
		}
		def size = Files.walk(Paths.get(file("conquer/usr").toURL().toURI())).mapToLong( { p -> p.toFile().length() }).sum()
		long sizeInKb = size / 1024
		def fout = new FileOutputStream(new File(file("."),"conquer/DEBIAN/control"));
		def s= "Package: conquer\n"
		s += "Version: 1.5.0\n"
		s += "Section: games\n"
		s += "Architecture: "
		s += System.getProperty("os.arch").equals("amd64")?"amd64":"arm64"
		s += "\n"
		s += "Maintainer: JCWasmx86\n"
		s += "Depends: conquer-engine, conquer-gui, libcurl4, libarchive13, libgtk-3-0\n"
		s += "Description: The native parts for conquer-gui\n"
		s += "Installed-Size: "+sizeInKb+"\n\n"
		fout.write(s.getBytes());
		fout.close();
		exec {
			commandLine "find", file(".").getAbsolutePath()+"/conquer", "-exec", "touch", "-t", "201108231405.14", "{}", ";"
		}
		exec {
			def envVars = [:]
			envVars["SOURCE_DATE_EPOCH"]="0"
			environment<<envVars
			commandLine "dpkg-deb", "--build", file(".").getAbsolutePath()+"/conquer"
		}
	}
}
task buildConquerGuiDeb() {
	println("Building conquer-gui.deb");
}
task buildConquerEngineDeb() {
	println("Building conquer-engine.deb");
}
task createConquerGuiDebDirectoryStructure(type: Exec) {
	mkdir "conquer-gui/usr/share/java/conquer"
	mkdir "conquer-gui/usr/share/conquer-gui"
	mkdir "conquer-gui/DEBIAN"
	commandLine "chmod", "0755", "conquer-gui/DEBIAN"
}
task copyFilesConquerGuiDeb() {
	doLast {
		println("Copying files")
	}
}

task copyFilesConquerGuiDebJars(type: Copy) {
	from "../ConquerFrontend/build/libs/"
	include "*.jar"
	into "conquer-gui/usr/share/java"
}
task copyFilesConquerGuiDebLicenses(type: Copy) {
	from "../auxiliary"
	include "LICENSE.txt"
	include "Conquer.license"
	into "conquer-gui/usr/share/conquer-gui"
}
task copyFilesConquerGuiDebSoundJars(type: Copy){
	from "../auxiliary/jars"
	include "*.jar"
	into "conquer-gui/usr/share/java/conquer"
}

task writeManifestForConquerGuiDeb {
	def size = Files.walk(Paths.get(file("conquer-gui/usr").toURL().toURI())).mapToLong( { p -> p.toFile().length() }).sum()
	long sizeInKb = size / 1024
	def fout = new FileOutputStream(new File(file("."),"conquer-gui/DEBIAN/control"));
	def s= "Package: conquer-gui\n"
	s += "Version: 1.5.0\n"
	s += "Section: games\n"
	s += "Architecture: all\n"
	s += "Maintainer: JCWasmx86\n"
	s += "Depends: conquer-engine\n"
	s += "Description: The GUI for the game engine conquer (Without Launcher)\n"
	s += "Installed-Size: "+sizeInKb+"\n\n"
	fout.write(s.getBytes());
	fout.close();
}
task changeDatesConquerGuiDeb(type: Exec) {
	commandLine "find", file(".").getAbsolutePath()+"/conquer-gui", "-exec", "touch", "-t", "201108231405.14", "{}", ";"
}
task buildConquerGuiDebFile(type: Exec) {
	commandLine "dpkg-deb", "--build", file(".").getAbsolutePath()+"/conquer-gui"
}

task createConquerEngineDebDirectoryStructure(type: Exec) {
	mkdir "conquer-engine/usr/share/java"
	mkdir "conquer-engine/usr/share/conquer-engine"
	mkdir "conquer-engine/DEBIAN"
	commandLine "chmod", "0755", "conquer-engine/DEBIAN"
}
task copyFilesConquerEngineDeb() {
	doLast {
		println("Copying files")
	}
}
task copyFilesConquerEngineDebJars(type: Copy) {
	from "../Conquer/build/libs/"
	include "*.jar"
	into "conquer-engine/usr/share/java"
}

task copyFilesConquerEngineDebLicenses(type: Copy) {
	from "../auxiliary"
	include "LICENSE.txt"
	include "Conquer.license"
	into "conquer-engine/usr/share/conquer-engine"
}
task copyFilesConquerEngineDebSPIJar(type: Copy) {
	from "../ConquerFrontendSPI/build/libs/"
	include "*.jar"
	into "conquer-engine/usr/share/java"
}

task writeManifestForConquerEngineDeb {
	def size = Files.walk(Paths.get(file("conquer-engine/usr").toURL().toURI())).mapToLong( { p -> p.toFile().length() }).sum()
	long sizeInKb = size / 1024
	def fout = new FileOutputStream(new File(file("."),"conquer-engine/DEBIAN/control"));
	def s= "Package: conquer-engine\n"
	s += "Version: 1.5.0\n"
	s += "Section: games\n"
	s += "Architecture: all\n"
	s += "Maintainer: JCWasmx86\n"
	s += "Depends: conquer-engine\n"
	s += "Description: The engine for the game conquer\n"
	s += "Installed-Size: "+sizeInKb+"\n\n"
	fout.write(s.getBytes());
	fout.close();
}
task changeDatesConquerEngineDeb(type: Exec) {
	commandLine "find", file(".").getAbsolutePath()+"/conquer-engine", "-exec", "touch", "-t", "201108231405.14", "{}", ";"
}
task buildConquerEngineDebFile(type: Exec) {
	commandLine "dpkg-deb", "--build", file(".").getAbsolutePath()+"/conquer-engine"
}
if(!Os.isFamily(Os.FAMILY_WINDOWS)) {
	assemble.dependsOn(buildDebs)
	buildConquerEngineDeb.dependsOn(copyFilesConquerEngineDeb)
	buildConquerEngineDeb.dependsOn(createConquerEngineDebDirectoryStructure)
	buildConquerEngineDeb.dependsOn(writeManifestForConquerEngineDeb)
	buildConquerGuiDeb.dependsOn(buildConquerEngineDebFile)
	buildConquerGuiDeb.dependsOn(buildConquerGuiDebFile)
	buildConquerGuiDeb.dependsOn(changeDatesConquerEngineDeb)
	buildConquerGuiDeb.dependsOn(changeDatesConquerGuiDeb)
	buildConquerGuiDeb.dependsOn(copyFilesConquerGuiDeb)
	buildConquerGuiDeb.dependsOn(createConquerGuiDebDirectoryStructure)
	buildConquerGuiDeb.dependsOn(writeManifestForConquerGuiDeb)
	buildConquerGuiDebFile.mustRunAfter changeDatesConquerGuiDeb
	buildDebs.dependsOn(buildConquerDeb)
	buildDebs.dependsOn(buildConquerEngineDeb)
	buildDebs.dependsOn(buildConquerGuiDeb)
	changeDatesConquerGuiDeb.mustRunAfter writeManifestForConquerGuiDeb
	buildConquerDeb.dependsOn(":Launcher:callMakefile")
	copyFilesConquerEngineDeb.dependsOn(":Conquer:jar")
	copyFilesConquerEngineDeb.dependsOn(":ConquerFrontendSPI:jar")
	copyFilesConquerEngineDeb.dependsOn(copyFilesConquerEngineDebJars)
	copyFilesConquerEngineDeb.dependsOn(copyFilesConquerEngineDebLicenses)
	copyFilesConquerEngineDeb.dependsOn(copyFilesConquerEngineDebSPIJar)
	copyFilesConquerEngineDebJars.dependsOn(":Conquer:conquerResources")
	copyFilesConquerEngineDebJars.dependsOn(":Conquer:jar")
	copyFilesConquerGuiDeb.dependsOn(":ConquerFrontend:jar")
	copyFilesConquerGuiDeb.dependsOn(copyFilesConquerGuiDebJars)
	copyFilesConquerGuiDeb.dependsOn(copyFilesConquerGuiDebLicenses)
	copyFilesConquerGuiDeb.dependsOn(copyFilesConquerGuiDebSoundJars)
	copyFilesConquerGuiDeb.dependsOn(createConquerGuiDebDirectoryStructure)
	copyFilesConquerGuiDeb.mustRunAfter ":ConquerFrontend:jar"
	copyFilesConquerGuiDeb.mustRunAfter ":auxiliary:downloadJarFiles"
	copyFilesConquerGuiDeb.mustRunAfter createConquerGuiDebDirectoryStructure
	copyFilesConquerGuiDeb.mustRunAfter createConquerGuiDebDirectoryStructure
	copyFilesConquerGuiDebSoundJars.dependsOn(":auxiliary:downloadJarFiles")
	copyFilesConquerGuiDebSoundJars.mustRunAfter ":auxiliary:downloadJarFiles"
	writeManifestForConquerGuiDeb.mustRunAfter copyFilesConquerGuiDeb
}

clean {
	delete "conquer"
	delete "conquer-engine"
	delete "conquer-gui"
	delete "conquer.deb"
	delete "conquer-engine.deb"
	delete "conquer-gui.deb"
}
