plugins {
	id "nebula.lint" version "16.17.0"
}
apply plugin: "application"
apply plugin: 'nebula.lint'
allprojects {
	apply plugin: "java"
	apply plugin: "eclipse"
	apply plugin: "idea"
	apply plugin: 'nebula.lint'
	gradleLint.rules = [
		"all-nebula-renames",
		'archaic-wrapper',
		"duplicate-dependency-class",
		"minimum-dependency-version",
		"overridden-dependency-version"
	]
	tasks.withType(AbstractArchiveTask) {
		preserveFileTimestamps = false
		reproducibleFileOrder = true
	}
	eclipse {
		classpath {
			defaultOutputDir = file("build")
			file {
				whenMerged {
					//Don't add DefaultPlugins to the modulepath, as these would be different automatic modules and each of them would have
					//the same package
					entries.findAll {
						(it.kind == "src" || it.kind == "lib")&&(!it.toString().contains("DefaultPlugins"))
					}.each {it.entryAttributes["module"] = "true"}
					entries.each{entry ->
						if (entry.kind == "src" && entry.hasProperty("output")) {
							entry.output = entry.output.replace("bin/", "build/")
						}
					}
				}
			}
		}
	}
	repositories {
		mavenCentral()
	}
	task configureEnvironment() {
		def envVars = [:]
		envVars["SOURCE_DATE_EPOCH"]="0"
		tasks.withType(Exec) { environment << envVars }
	}
	assemble.dependsOn(configureEnvironment);
	dependencies {
		testCompile("org.junit.jupiter:junit-jupiter:5.6.0")
	}
}

tasks.withType(AbstractArchiveTask) {
	preserveFileTimestamps = false
	reproducibleFileOrder = true
}
